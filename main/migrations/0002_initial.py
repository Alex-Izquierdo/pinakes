# Generated by Django 3.2.5 on 2021-07-22 22:34

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('main', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='serviceinventory',
            name='tags',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='serviceinventory',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.tenant'),
        ),
        migrations.AddField(
            model_name='request',
            name='parent',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.request'),
        ),
        migrations.AddField(
            model_name='request',
            name='request_context',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.requestcontext'),
        ),
        migrations.AddField(
            model_name='request',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.tenant'),
        ),
        migrations.AddField(
            model_name='request',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='request',
            name='workflow',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.workflow'),
        ),
        migrations.AddField(
            model_name='portfolioitem',
            name='portfolio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.portfolio'),
        ),
        migrations.AddField(
            model_name='portfolioitem',
            name='tags',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='portfolioitem',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.tenant'),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='tags',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='portfolio',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.tenant'),
        ),
        migrations.AddField(
            model_name='orderitem',
            name='order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.order'),
        ),
        migrations.AddField(
            model_name='orderitem',
            name='portfolio_item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.portfolioitem'),
        ),
        migrations.AddField(
            model_name='orderitem',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.tenant'),
        ),
        migrations.AddField(
            model_name='orderitem',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='order',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.tenant'),
        ),
        migrations.AddField(
            model_name='order',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='action',
            name='request',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.request'),
        ),
        migrations.AddField(
            model_name='action',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.tenant'),
        ),
        migrations.AddField(
            model_name='action',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddConstraint(
            model_name='workflow',
            constraint=models.CheckConstraint(check=models.Q(('name__length__gt', 0)), name='main_workflow_name_empty'),
        ),
        migrations.AddConstraint(
            model_name='workflow',
            constraint=models.UniqueConstraint(fields=('name', 'tenant', 'template'), name='main_workflow_name_unique'),
        ),
        migrations.AddConstraint(
            model_name='workflow',
            constraint=models.UniqueConstraint(fields=('internal_sequence', 'tenant'), name='main_workflow_internal_sequence_unique'),
        ),
        migrations.AddConstraint(
            model_name='template',
            constraint=models.CheckConstraint(check=models.Q(('title__length__gt', 0)), name='main_template_title_empty'),
        ),
        migrations.AddConstraint(
            model_name='template',
            constraint=models.UniqueConstraint(fields=('title', 'tenant'), name='main_template_title_unique'),
        ),
        migrations.AddConstraint(
            model_name='portfolioitem',
            constraint=models.CheckConstraint(check=models.Q(('name__length__gt', 0)), name='main_portfolioitem_name_empty'),
        ),
        migrations.AddConstraint(
            model_name='portfolioitem',
            constraint=models.CheckConstraint(check=models.Q(('service_offering_ref__length__gt', 0)), name='main_portfolioitem_service_offering_empty'),
        ),
        migrations.AddConstraint(
            model_name='portfolioitem',
            constraint=models.UniqueConstraint(fields=('name', 'tenant', 'portfolio'), name='main_portfolioitem_name_unique'),
        ),
        migrations.AddConstraint(
            model_name='portfolio',
            constraint=models.CheckConstraint(check=models.Q(('name__length__gt', 0)), name='main_portfolio_name_empty'),
        ),
        migrations.AddConstraint(
            model_name='portfolio',
            constraint=models.UniqueConstraint(fields=('name', 'tenant'), name='main_portfolio_name_unique'),
        ),
        migrations.AddIndex(
            model_name='orderitem',
            index=models.Index(fields=['tenant', 'user'], name='main_orderi_tenant__57608b_idx'),
        ),
        migrations.AddConstraint(
            model_name='orderitem',
            constraint=models.CheckConstraint(check=models.Q(('name__length__gt', 0)), name='main_orderitem_name_empty'),
        ),
        migrations.AddConstraint(
            model_name='orderitem',
            constraint=models.UniqueConstraint(fields=('name', 'tenant', 'order', 'portfolio_item'), name='main_orderitem_name_unique'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['tenant', 'user'], name='main_order_tenant__9f158a_idx'),
        ),
    ]
