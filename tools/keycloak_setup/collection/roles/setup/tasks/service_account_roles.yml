- name: "Get service account user object for the client"
  register: sa_object
  uri:
    validate_certs: "{{ verify_keycloak_ssl }}"
    headers:
      Accept: application/json
      Authorization: "Bearer {{ keycloak_token.json.access_token }}"
      Content-type: application/json
    method: GET
    status_code:
      - 200
    url: "{{ auth_keycloak_url }}/admin/realms/{{ realm_name }}/clients/{{ catalog_client['id'] }}/service-account-user"
- name: "Set sa_user_id from the retrived object"
  set_fact:
    sa_user_id: "{{ sa_object['json'].id }}"
- name: "Get Realm management client"
  register: realm_management_client
  uri:
    validate_certs: "{{ verify_keycloak_ssl }}"
    headers:
      Accept: application/json
      Authorization: "Bearer {{ keycloak_token.json.access_token }}"
      Content-type: application/json
    method: GET
    status_code:
      - 200
    url: "{{ auth_keycloak_url }}/admin/realms/{{ realm_name }}/clients?clientId=realm-management&first=0&max=20&search=true"
- name: "Save realm client"
  set_fact:
    realm_client: "{{ realm_management_client['json'][0]  }}"

- name: "Get composite realm roles"
  register: composite_realm_roles
  uri:
    validate_certs: "{{ verify_keycloak_ssl }}"
    headers:
      Accept: application/json
      Authorization: "Bearer {{ keycloak_token.json.access_token }}"
      Content-type: application/json
    method: GET
    status_code:
      - 200
    url: "{{ auth_keycloak_url }}/admin/realms/{{ realm_name }}/users/{{ sa_user_id }}/role-mappings/realm/composite"
- name: "Get available realm roles"
  register: available_realm_roles
  uri:
    validate_certs: "{{ verify_keycloak_ssl }}"
    headers:
      Accept: application/json
      Authorization: "Bearer {{ keycloak_token.json.access_token }}"
      Content-type: application/json
    method: GET
    status_code:
      - 200
    url: "{{ auth_keycloak_url }}/admin/realms/{{ realm_name }}/users/{{ sa_user_id }}/role-mappings/realm/available"
- name: "Get composite client roles"
  register: composite_client_roles
  uri:
    validate_certs: "{{ verify_keycloak_ssl }}"
    headers:
      Accept: application/json
      Authorization: "Bearer {{ keycloak_token.json.access_token }}"
      Content-type: application/json
    method: GET
    status_code:
      - 200
    url: "{{ auth_keycloak_url }}/admin/realms/{{ realm_name }}/users/{{ sa_user_id }}/role-mappings/clients/{{ realm_client['id'] }}/composite"
- name: "Get available client roles"
  register: available_client_roles
  uri:
    validate_certs: "{{ verify_keycloak_ssl }}"
    headers:
      Accept: application/json
      Authorization: "Bearer {{ keycloak_token.json.access_token }}"
      Content-type: application/json
    method: GET
    status_code:
      - 200
    url: "{{ auth_keycloak_url }}/admin/realms/{{ realm_name }}/users/{{ sa_user_id }}/role-mappings/clients/{{ realm_client['id'] }}/available"
- name: "Combine all roles into a single list"
  set_fact:
    all_roles: "{{ composite_realm_roles['json'] + available_realm_roles['json'] + composite_client_roles['json'] + available_client_roles['json'] }}"

- name: "Filter role from all roles"
  set_fact:
    role_body: "{{ all_roles | selectattr('name', 'in', realm_management_roles) | list }}"
- name: "Add realm management roles"
  uri:
    validate_certs: "{{ verify_keycloak_ssl }}"
    body: "{{ role_body | to_json }}"
    body_format: json
    headers:
      Accept: application/json
      Authorization: "Bearer {{ keycloak_token.json.access_token }}"
      Content-type: application/json
    method: POST
    status_code:
      - 200
      - 204
    url: "{{ auth_keycloak_url }}/admin/realms/{{ realm_name }}/users/{{ sa_user_id }}/role-mappings/clients/{{ realm_client['id'] }}"
  when: role_body|length > 0
